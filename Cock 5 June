using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CocktailShakerSortAdaptive
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int program = 1;
            while(program == 1)
            {
                //int[] arr = { 29, 72, 98, 13, 87, 66, 52, 51, 36 };
                //int temp = 0;
                bool swap = false;
                //Console.WriteLine("The unsorted array...");
                //foreach (int a in arr)
                //    Console.Write(a + "\t");
                //Console.WriteLine();
                int[] visualizerSize = { 29, 160 }; // rows and columns of console
                Random rnd = new Random();
                int[] arr = new int[visualizerSize[1]];
                int[] newDispl = new int[visualizerSize[1]];
                int[] curDispl = new int[visualizerSize[1]];
                int temp = 0;
                /*
                 * Possible colors:
                 * 0 : Reset Color
                 * 1 : Blue
                 * 2 : Red
                 * 3 : Green
                 */
                for (int x = 0; x < arr.Length; x++)
                {
                    arr[x] = rnd.Next(visualizerSize[0]) + 1;
                    newDispl[x] = 0;
                    curDispl[x] = 0;
                }
                // this line just sets the window size to always display in a 
                // 120 * 30 characters in size
                Console.SetWindowSize(visualizerSize[1], visualizerSize[0] + 2); //This doesnt work on Mac

                for (int a = 0; a < arr.Length; a++)
                {
                    for (int b = visualizerSize[0]; b > 0; b--)
                    {
                        Console.SetCursorPosition(a, b - 1);
                        if (arr[a] > visualizerSize[0] - b)
                            Console.Write("0");
                        else
                            Console.Write(" ");
                    }
                }
                Console.SetCursorPosition(0, visualizerSize[0] + 1);
                Console.Write("To be sorted using cocktail shaker sort... Press any key to begin...");
                Console.ReadKey();
                for (int x = 0; x < (arr.Length / 2) + 1; x++)// number of passes
                {
                    for (int y = 0 + x; y < arr.Length - 1 - x; y++) // left to right motion
                    {
                        swap = false;
                        if (arr[y] > arr[y + 1])
                        {
                            temp = arr[y];
                            arr[y] = arr[y + 1];
                            arr[y + 1] = temp;
                            swap = true;
                        }
                        newDispl[y] = 1;
                        newDispl[y + 1] = 2;
                        //Console.ResetColor();
                        //Console.WriteLine("Pass {0} Left to Right Pass {1}...", x, y);
                        string theline = "Pass {0} Left to Right Pass {1}...";
                        //for (int a = 0; a < arr.Length; a++)
                        //{
                        //    if (a == y)
                        //        if (swap)
                        //            Console.ForegroundColor = ConsoleColor.Red;
                        //        else
                        //            Console.ForegroundColor = ConsoleColor.Blue;
                        //    else if (a == y + 1)
                        //        if (swap)
                        //            Console.ForegroundColor = ConsoleColor.Blue;
                        //        else
                        //            Console.ForegroundColor = ConsoleColor.Red;
                        //    else
                        //        Console.ResetColor();
                        //    Console.Write(arr[a] + "\t");
                        //}
                        //Console.WriteLine();
                        //Console.ReadKey();
                        //THE DISPLAY
                        for (int a = 0; a < arr.Length; a++)
                        {
                            for (int b = visualizerSize[0]; b > 0; b--)
                            {
                                if (newDispl[a] != curDispl[a])
                                {
                                    Console.SetCursorPosition(a, b - 1);
                                    switch (newDispl[a])
                                    {
                                        case 0:
                                            Console.ResetColor();
                                            break;
                                        case 1:
                                            Console.ForegroundColor = ConsoleColor.Blue;
                                            break;
                                        case 2:
                                            Console.ForegroundColor = ConsoleColor.Red;
                                            break;
                                        case 3:
                                            Console.ForegroundColor = ConsoleColor.Green;
                                            break;
                                    }
                                    if (arr[a] > visualizerSize[0] - b)
                                        Console.Write("0");
                                    else
                                        Console.Write(" ");
                                }
                            }
                            curDispl[a] = newDispl[a];
                            newDispl[a] = 0;
                        }
                        Console.SetCursorPosition(0, visualizerSize[0] + 1);
                        Console.Write(theline, x, y);
                        //Console.ReadKey();
                        //Thread.Sleep(100);
                    }
                    for (int y = arr.Length - 1 - x; y > 0 + x; y--) // right to left motion
                    {
                        swap = false;
                        if (arr[y] < arr[y - 1])
                        {
                            temp = arr[y];
                            arr[y] = arr[y - 1];
                            arr[y - 1] = temp;
                            swap = true;
                        }
                        newDispl[y] = 1;
                        newDispl[y - 1] = 2;
                        //Console.ResetColor();
                        string theline2 = "Pass {0} Right to Left Pass {1}...";
                        //for (int a = 0; a < arr.Length; a++)
                        //{
                        //    if (a == y)
                        //        if (swap)
                        //            Console.ForegroundColor = ConsoleColor.Cyan;
                        //        else
                        //            Console.ForegroundColor = ConsoleColor.Magenta;
                        //    else if (a == y - 1)
                        //        if (swap)
                        //            Console.ForegroundColor = ConsoleColor.Magenta;
                        //        else
                        //            Console.ForegroundColor = ConsoleColor.Cyan;
                        //    else
                        //        Console.ResetColor();
                        //    Console.Write(arr[a] + "\t");
                        //}
                        //Console.WriteLine();
                        ////Console.ReadKey();
                        ///
                        //THE DISPLAY
                        for (int a = 0; a < arr.Length; a++)
                        {
                            for (int b = visualizerSize[0]; b > 0; b--)
                            {
                                if (newDispl[a] != curDispl[a])
                                {
                                    Console.SetCursorPosition(a, b - 1);
                                    switch (newDispl[a])
                                    {
                                        case 0:
                                            Console.ResetColor();
                                            break;
                                        case 1:
                                            Console.ForegroundColor = ConsoleColor.Blue;
                                            break;
                                        case 2:
                                            Console.ForegroundColor = ConsoleColor.Red;
                                            break;
                                        case 3:
                                            Console.ForegroundColor = ConsoleColor.Green;
                                            break;
                                    }
                                    if (arr[a] > visualizerSize[0] - b)
                                        Console.Write("0");
                                    else
                                        Console.Write(" ");
                                }
                            }
                            curDispl[a] = newDispl[a];
                            newDispl[a] = 0;
                        }
                        Console.SetCursorPosition(0, visualizerSize[0] + 1);
                        Console.Write(theline2, x, y);
                        //Console.ReadKey();
                        //Thread.Sleep(100);
                    }
                }
                Console.ReadKey();
            }
        }
    }
}
