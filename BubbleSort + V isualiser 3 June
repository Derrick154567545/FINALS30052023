using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace BubbleSortWithVisualizer2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] visualizerSize = { 50, 140 }; // rows and columns of console

            Random rnd = new Random();
            int[] arr = new int[visualizerSize[1]];
            int[] newDispl = new int[visualizerSize[1]];
            int[] curDispl = new int[visualizerSize[1]];
            int temp = 0;

            /*
             * Possible colors:
             * 0 : Reset Color
             * 1 : Blue
             * 2 : Red
             * 3 : Green
             */

            for (int x = 0; x < arr.Length; x++)
            {
                arr[x] = rnd.Next(visualizerSize[0]) + 1;
                newDispl[x] = 0;
                curDispl[x] = 0;
            }

            // this line just sets the window size to always display in a 
            // 120 * 30 characters in size
            //Console.SetWindowSize(visualizerSize[1], visualizerSize[0] + 1); //This doesnt work on Mac

            for (int a = 0; a < arr.Length; a++)
            {
                for (int b = visualizerSize[0]; b > 0; b--)
                {
                    Console.SetCursorPosition(a, b - 1);
                    if (arr[a] > visualizerSize[0] - b)
                        Console.Write("0");
                    else
                        Console.Write(" ");
                }
            }
            Console.SetCursorPosition(0, visualizerSize[0] + 1);
            Console.Write("To be sorted using insertion sort... Press any key to begin...");
            Console.ReadKey();

            for (int x = 0; x < arr.Length; x++)
            {
                for (int y = 0; y < arr.Length - 1; y++)
                {
                    newDispl[y] = 1; //Ohhhhh
                    newDispl[y + 1] = 2;
                    for (int three = 0; three < 3; three++)
                    {
                        for (int a = 0; a < arr.Length; a++)
                        //for (int a = visualizerSize[0]; a > 0; a--) // dictate number of rows
                        {
                            for (int b = visualizerSize[0]; b > 0; b--)
                            //for (int b = 0; b < arr.Length; b++) // dictate number of columns
                            {
                                if (newDispl[a] != curDispl[a])
                                {
                                    Console.SetCursorPosition(a, b - 1);
                                    switch (newDispl[a])
                                    {
                                        case 0:
                                            Console.ResetColor();
                                            break;
                                        case 1:
                                            Console.ForegroundColor = ConsoleColor.Blue;
                                            break;
                                        case 2:
                                            Console.ForegroundColor = ConsoleColor.Red;
                                            break;
                                        case 3:
                                            Console.ForegroundColor = ConsoleColor.Green;
                                            break;
                                    }

                                    if (arr[a] > visualizerSize[0] - b)
                                        Console.Write("0");
                                    else
                                        Console.Write(" ");
                                }
                            }
                            curDispl[a] = newDispl[a];
                            newDispl[a] = 0;
                        }
                        Console.SetCursorPosition(0, visualizerSize[0] + 1);
                        if (three == 0)
                        {
                            Console.Write("Pass {0} : Thinking. . .                                               ", x);
                            if (arr[y] > arr[y + 1])
                            {
                                temp = arr[y];
                                arr[y] = arr[y + 1];
                                arr[y + 1] = temp;

                                newDispl[y] = 3;
                                newDispl[y + 1] = 3;
                            }
                        }
                        if (three == 1)
                        {
                            Console.Write("Pass {0} : Swapping . . .                                             ", x);
                        }
                        if (three == 2)
                        {
                            Console.Write("Pass {0} : Resetting. . .                                             ", x);
                        }
                        //Console.ReadKey();
                        Thread.Sleep(200); //200, 100, 50
                        //Console.Clear();
                    }
                }
            }
            Console.SetCursorPosition(0, visualizerSize[0] + 1);
            Console.Write("Done!!!!!!!!!                                              ");
            Console.ReadKey();
        }
    }
}
